#!/bin/bash

# BOM API Test Script
# Bu script'i √ßalƒ±≈ütƒ±rarak t√ºm API endpoint'lerini test edebilirsiniz

API_URL="http://localhost:3001"

echo "üöÄ BOM API Test Script'i ba≈ülatƒ±lƒ±yor..."
echo "=====================================\n"

# Renk kodlarƒ±
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Test fonksiyonu
test_endpoint() {
    echo -e "${BLUE}Test: $1${NC}"
    echo "Komut: $2"
    echo "Sonu√ß:"
    eval $2
    echo -e "\n${GREEN}---${NC}\n"
}

# 1. Saƒülƒ±k kontrol√º
test_endpoint "API Saƒülƒ±k Kontrol√º" \
"curl -s $API_URL/api/health | jq '.database.status'"

# 2. Ana √ºr√ºn olu≈ütur
echo -e "${BLUE}Ana √ºr√ºn olu≈üturuluyor...${NC}"
MAIN_PRODUCT=$(curl -s -X POST $API_URL/api/products \
  -H "Content-Type: application/json" \
  -d '{"name": "Test Araba", "description": "Test ama√ßlƒ± araba"}')

MAIN_ID=$(echo $MAIN_PRODUCT | jq -r '.data._id')
echo "Ana √ºr√ºn ID: $MAIN_ID"
echo "$MAIN_PRODUCT" | jq
echo ""

# 3. Alt √ºr√ºn olu≈ütur
echo -e "${BLUE}Alt √ºr√ºn olu≈üturuluyor...${NC}"
SUB_PRODUCT=$(curl -s -X POST $API_URL/api/products \
  -H "Content-Type: application/json" \
  -d "{\"name\": \"Test Motor\", \"description\": \"Test motoru\", \"parentId\": \"$MAIN_ID\"}")

SUB_ID=$(echo $SUB_PRODUCT | jq -r '.data._id')
echo "Alt √ºr√ºn ID: $SUB_ID"
echo "$SUB_PRODUCT" | jq
echo ""

# 4. T√ºm √ºr√ºnleri listele
test_endpoint "K√∂k √úr√ºnleri Listele" \
"curl -s $API_URL/api/products | jq '.data[] | {name: .name, level: .level, childrenCount: .childrenCount}'"

# 5. Arama testi
test_endpoint "Arama Testi" \
"curl -s '$API_URL/api/products/search?q=Test' | jq '.data[] | {name: .name, score: .score}'"

# 6. Alt √ºr√ºnleri getir
test_endpoint "Alt √úr√ºnleri Getir" \
"curl -s $API_URL/api/products/$MAIN_ID/children | jq '.data[] | {name: .name, level: .level}'"

# 7. √úr√ºn g√ºncelle
test_endpoint "√úr√ºn G√ºncelle" \
"curl -s -X PUT $API_URL/api/products/$SUB_ID \
  -H 'Content-Type: application/json' \
  -d '{\"name\": \"G√ºncellenmi≈ü Motor\", \"description\": \"Yeni a√ßƒ±klama\"}' | jq '.data | {name: .name, description: .description}'"

# 8. Hata testi
test_endpoint "Hata Testi (Ge√ßersiz ID)" \
"curl -s $API_URL/api/products/invalid-id | jq '.error'"

# 9. Validation testi
test_endpoint "Validation Testi (Name olmadan √ºr√ºn olu≈ütur)" \
"curl -s -X POST $API_URL/api/products \
  -H 'Content-Type: application/json' \
  -d '{\"description\": \"Sadece a√ßƒ±klama\"}' | jq '.error'"

# 10. Temizlik - Test √ºr√ºnlerini sil
echo -e "${BLUE}Temizlik: Test √ºr√ºnleri siliniyor...${NC}"
curl -s -X DELETE $API_URL/api/products/$MAIN_ID | jq '.message'
echo ""

echo -e "${GREEN}‚úÖ T√ºm testler tamamlandƒ±!${NC}"
echo "Bu script'i tekrar √ßalƒ±≈ütƒ±rabilirsiniz: ./test-api.sh" 